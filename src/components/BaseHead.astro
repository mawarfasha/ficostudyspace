---
import "../styles/global.css";
---

<meta name="viewport" content="width=device-width" />
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="author" content="Fico Study Space" />
<meta name="keywords" content="fico, study space, focus timer, timelapse, productivity, study desk, focus, concentration, pomodoro" />

<!-- Security Headers -->
<meta http-equiv="Content-Security-Policy" content="default-src 'self'; script-src 'self' 'unsafe-inline' https://unpkg.com https://www.unpkg.com; style-src 'self' 'unsafe-inline' https://rsms.me https://fonts.googleapis.com; img-src 'self' data: https:; font-src 'self' data: https://fonts.gstatic.com https://rsms.me; connect-src 'self' https://fonts.googleapis.com https://fonts.gstatic.com;" />
<meta http-equiv="X-Content-Type-Options" content="nosniff" />
<meta http-equiv="X-Frame-Options" content="DENY" />
<meta http-equiv="X-XSS-Protection" content="1; mode=block" />
<meta name="referrer" content="strict-origin-when-cross-origin" />

<!-- Favicon guidelines generated with https://favicon.io/ -->
<link rel="icon" href="/ficocircle.svg" type="image/svg+xml" />
<link rel="shortcut icon" href="/ficocircle.svg" />
<link rel="apple-touch-icon" sizes="180x180" href="/ficocircle.svg" />
<link rel="manifest" href="/manifest.webmanifest" />
<meta name="msapplication-TileColor" content="#ff0000" />
<meta name="theme-color" content="#ff0000" />

<!-- HTML in your document's head -->
<link rel="preconnect" href="https://rsms.me/" />
<link rel="preconnect" href="https://fonts.googleapis.com" />
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
<link rel="stylesheet" href="https://rsms.me/inter/inter.css" />
<link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;700&display=swap" />

<!-- Scripts -->
<script defer src="https://unpkg.com/alpinejs@3.13.3/dist/cdn.min.js"></script>

<script is:inline>
	const startingWith =
		(subject, replacement) =>
		({ name, value }) => {
			if (name.startsWith(subject)) {
				name = name.replace(subject, replacement);
			}
			return { name, value };
		};

	document.addEventListener("alpine:init", () => {
		Alpine.prefix("data-x");
		Alpine.mapAttributes(startingWith("data-xon.", Alpine.prefixed("on:")));
		Alpine.mapAttributes(startingWith("data-xbind.", Alpine.prefixed("bind:")));
	});
</script>

<script is:inline>
	if ("paintWorklet" in CSS) {
		CSS.paintWorklet.addModule("https://www.unpkg.com/css-houdini-squircle@0.3.0/squircle.min.js");
	}
</script>
